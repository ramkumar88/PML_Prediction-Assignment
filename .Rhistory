setwd("~/Documents/Data Science/Practical Machine Learning/Week 3/Prediction Assignment")
library(caret)
library(randomForest)
dataDir <- "data"
trainingUrl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
trainingCSV <- file.path(dataDir,"pml-training.csv")
testingUrl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
testingCSV <- file.path(dataDir,"pml-testing.csv")
if (!file.exists(dataDir)){
dir.create(file.path(dataDir))
}
## read csv if raw data is not defined
if (!file.exists(trainingCSV)){
download.file(trainingUrl, destfile = trainingCSV, method="curl")
}
## read csv if raw data is not defined
if (!file.exists(testingCSV)){
download.file(testingUrl, destfile = testingCSV, method="curl")
}
set.seed(13343)
## Load the data from csv
trainingData <- read.csv(trainingCSV)
testingData <- read.csv(testingCSV)
## Remove near zero variance data from training
trainingData <- trainingData[,-nearZeroVar(trainingData)]
## Remove all columns with NA
trainingData <- trainingData[,colSums(is.na(trainingData))==0]
# Parameters
formula <- as.formula("classe ~ .")
## convert factors to indicator
trainingData.dummyvars <- dummyVars(formula, data=trainingData)
trainingData.forest <- as.data.frame(predict(trainingData.dummyvars, newdata=trainingData))
trainingData.forest <- cbind(trainingData$classe,trainingData.forest)
colnames(trainingData.forest)[1] <- "classe"
## Split training to training and validation
inTrain <- createDataPartition(y=trainingData.forest$classe,p=0.70,list=FALSE)
validationData <- trainingData.forest[-inTrain,]
subTrainingData <- trainingData.forest[inTrain,]
dim(subTrainingData)
#fit the model
modelFit <- train(classe~ .,method="rf",data=subTrainingData,trControl=trainControl(method = 'cv'))
